<?php
/**
 * Address
 *
 * PHP version 5
 *
 * @category Class
 * @package  Squiggle
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Squiggle\Model;

use \ArrayAccess;
/**
 * Address Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Squiggle
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Address implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'email' => 'string',
        'password' => 'string',
        'first_name' => 'string',
        'last_name' => 'string',
        'job_title' => 'string',
        'tel_mobile' => 'string',
        'tel_direct' => 'string',
        'linkedin' => 'string',
        'facebook' => 'string',
        'twitter' => 'string',
        'instagram' => 'string',
        'googleplus' => 'string',
        'signatures' => '\Squiggle\Model\Signature[]',
        'user' => 'int'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'email' => 'email',
        'password' => 'password',
        'first_name' => 'first_name',
        'last_name' => 'last_name',
        'job_title' => 'job_title',
        'tel_mobile' => 'tel_mobile',
        'tel_direct' => 'tel_direct',
        'linkedin' => 'linkedin',
        'facebook' => 'facebook',
        'twitter' => 'twitter',
        'instagram' => 'instagram',
        'googleplus' => 'googleplus',
        'signatures' => 'signatures',
        'user' => 'user'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'email' => 'setEmail',
        'password' => 'setPassword',
        'first_name' => 'setFirstName',
        'last_name' => 'setLastName',
        'job_title' => 'setJobTitle',
        'tel_mobile' => 'setTelMobile',
        'tel_direct' => 'setTelDirect',
        'linkedin' => 'setLinkedin',
        'facebook' => 'setFacebook',
        'twitter' => 'setTwitter',
        'instagram' => 'setInstagram',
        'googleplus' => 'setGoogleplus',
        'signatures' => 'setSignatures',
        'user' => 'setUser'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'email' => 'getEmail',
        'password' => 'getPassword',
        'first_name' => 'getFirstName',
        'last_name' => 'getLastName',
        'job_title' => 'getJobTitle',
        'tel_mobile' => 'getTelMobile',
        'tel_direct' => 'getTelDirect',
        'linkedin' => 'getLinkedin',
        'facebook' => 'getFacebook',
        'twitter' => 'getTwitter',
        'instagram' => 'getInstagram',
        'googleplus' => 'getGoogleplus',
        'signatures' => 'getSignatures',
        'user' => 'getUser'
    );
  
    
    /**
      * $id 
      * @var int
      */
    protected $id = null;
    
    /**
      * $email 
      * @var string
      */
    protected $email = null;
    
    /**
      * $password 
      * @var string
      */
    protected $password = null;
    
    /**
      * $first_name 
      * @var string
      */
    protected $first_name = null;
    
    /**
      * $last_name 
      * @var string
      */
    protected $last_name = null;
    
    /**
      * $job_title 
      * @var string
      */
    protected $job_title = null;
    
    /**
      * $tel_mobile 
      * @var string
      */
    protected $tel_mobile = null;
    
    /**
      * $tel_direct 
      * @var string
      */
    protected $tel_direct = null;
    
    /**
      * $linkedin 
      * @var string
      */
    protected $linkedin = null;
    
    /**
      * $facebook 
      * @var string
      */
    protected $facebook = null;
    
    /**
      * $twitter 
      * @var string
      */
    protected $twitter = null;
    
    /**
      * $instagram 
      * @var string
      */
    protected $instagram = null;
    
    /**
      * $googleplus 
      * @var string
      */
    protected $googleplus = null;
    
    /**
      * $signatures 
      * @var \Squiggle\Model\Signature[]
      */
    protected $signatures = null;
    
    /**
      * $user 
      * @var int
      */
    protected $user = null;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            foreach ($data as $key => $value) {
                if (property_exists($this, $key)) {
                    $this->$key = $value;
                }
            }
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id 
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets email
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }
  
    /**
     * Sets email
     * @param string $email 
     * @return $this
     */
    public function setEmail($email)
    {
        
        $this->email = $email;
        return $this;
    }
    
    /**
     * Gets password
     * @return string
     */
    public function getPassword()
    {
        return $this->password;
    }
  
    /**
     * Sets password
     * @param string $password 
     * @return $this
     */
    public function setPassword($password)
    {
        
        $this->password = $password;
        return $this;
    }
    
    /**
     * Gets first_name
     * @return string
     */
    public function getFirstName()
    {
        return $this->first_name;
    }
  
    /**
     * Sets first_name
     * @param string $first_name 
     * @return $this
     */
    public function setFirstName($first_name)
    {
        
        $this->first_name = $first_name;
        return $this;
    }
    
    /**
     * Gets last_name
     * @return string
     */
    public function getLastName()
    {
        return $this->last_name;
    }
  
    /**
     * Sets last_name
     * @param string $last_name 
     * @return $this
     */
    public function setLastName($last_name)
    {
        
        $this->last_name = $last_name;
        return $this;
    }
    
    /**
     * Gets job_title
     * @return string
     */
    public function getJobTitle()
    {
        return $this->job_title;
    }
  
    /**
     * Sets job_title
     * @param string $job_title 
     * @return $this
     */
    public function setJobTitle($job_title)
    {
        
        $this->job_title = $job_title;
        return $this;
    }
    
    /**
     * Gets tel_mobile
     * @return string
     */
    public function getTelMobile()
    {
        return $this->tel_mobile;
    }
  
    /**
     * Sets tel_mobile
     * @param string $tel_mobile 
     * @return $this
     */
    public function setTelMobile($tel_mobile)
    {
        
        $this->tel_mobile = $tel_mobile;
        return $this;
    }
    
    /**
     * Gets tel_direct
     * @return string
     */
    public function getTelDirect()
    {
        return $this->tel_direct;
    }
  
    /**
     * Sets tel_direct
     * @param string $tel_direct 
     * @return $this
     */
    public function setTelDirect($tel_direct)
    {
        
        $this->tel_direct = $tel_direct;
        return $this;
    }
    
    /**
     * Gets linkedin
     * @return string
     */
    public function getLinkedin()
    {
        return $this->linkedin;
    }
  
    /**
     * Sets linkedin
     * @param string $linkedin 
     * @return $this
     */
    public function setLinkedin($linkedin)
    {
        
        $this->linkedin = $linkedin;
        return $this;
    }
    
    /**
     * Gets facebook
     * @return string
     */
    public function getFacebook()
    {
        return $this->facebook;
    }
  
    /**
     * Sets facebook
     * @param string $facebook 
     * @return $this
     */
    public function setFacebook($facebook)
    {
        
        $this->facebook = $facebook;
        return $this;
    }
    
    /**
     * Gets twitter
     * @return string
     */
    public function getTwitter()
    {
        return $this->twitter;
    }
  
    /**
     * Sets twitter
     * @param string $twitter 
     * @return $this
     */
    public function setTwitter($twitter)
    {
        
        $this->twitter = $twitter;
        return $this;
    }
    
    /**
     * Gets instagram
     * @return string
     */
    public function getInstagram()
    {
        return $this->instagram;
    }
  
    /**
     * Sets instagram
     * @param string $instagram 
     * @return $this
     */
    public function setInstagram($instagram)
    {
        
        $this->instagram = $instagram;
        return $this;
    }
    
    /**
     * Gets googleplus
     * @return string
     */
    public function getGoogleplus()
    {
        return $this->googleplus;
    }
  
    /**
     * Sets googleplus
     * @param string $googleplus 
     * @return $this
     */
    public function setGoogleplus($googleplus)
    {
        
        $this->googleplus = $googleplus;
        return $this;
    }
    
    /**
     * Gets signatures
     * @return \Squiggle\Model\Signature[]
     */
    public function getSignatures()
    {
        return $this->signatures;
    }
  
    /**
     * Sets signatures
     * @param \Squiggle\Model\Signature[] $signatures 
     * @return $this
     */
    public function setSignatures($signatures)
    {
        
        $this->signatures = $signatures;
        return $this;
    }
    
    /**
     * Gets user
     * @return int
     */
    public function getUser()
    {
        return $this->user;
    }
  
    /**
     * Sets user
     * @param int $user 
     * @return $this
     */
    public function setUser($user)
    {
        
        $this->user = $user;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Squiggle\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Squiggle\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
